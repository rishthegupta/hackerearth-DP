Soumika has a string S and its starting index is 1. The string S consists of characters from . As she is very intelligent, she wants to test his brother Vinay Tendulkar. She asked her brother Vinay Tendulkar to count the number of even numbered characters ( i.e  ) for every index i . For an index i, the result should be calculated from i to the end of the string. As Vinay doesn't know about programming, he wants you to help him find the solution.

Input:
First line contains a string S.

Output:
Print |S| space-separated integers,the result of every index.

Constraints:
1 ≤ |S| ≤ 4

SAMPLE INPUT 
574674546476
SAMPLE OUTPUT 
7 7 7 6 5 5 4 4 3 2 1 1
Explanation
Given string S is .
for index 1
Number of even numbers from 5 to end of the string is 7 so the result of index 1 is 7.
for index 2
Number of even numbers from 7 to end of the string is 7 so the result of index 2 is 7.
for index 3
Number of even numbers from 4 to end of the string is 7 so the result of index 3 is 7.
for index 3
Number of even numbers from 6 to end of the string is 6 so the result of index 4 is 6.....
.
.
.


:: CODE ::

//Done

/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/

import java.util.Arrays; 

public class Main
{
    //Checks if a character is digit or not.
    private static boolean isADigit(char c) 
    {
        return  (c >= '0' && c <= '9');
    }
  
    //counts if how many even digits are there in a string of digits. 
    public static int countEvenNumber(char[] input)
    {
        //System.out.println(input);
        
        int result=0;
        
        for(int i=0;i<input.length;i++)
        {
          if(isADigit(input[i]) && Character.getNumericValue(input[i])%2==0)
          {
              result++;
          }
        }
    
        return result;
    }
    
    //slices an array by 1 character from begining.
    public static char[] sliceArrayByOneElement(char[] ip)
    {
        return Arrays.copyOfRange(ip,1,ip.length);
    }
    
    
    //main method
	public static void main(String[] args) {
	    
	    String input="574674546476";
	    int inputLength=input.length();
	    char inputArray[]=input.toCharArray();
	   
	    String finalOutput=" ";
	    
	    for(int i=0;i<inputLength;i++)
	    {
	      
	            finalOutput=finalOutput+" "+countEvenNumber(inputArray);
	            
	          inputArray=sliceArrayByOneElement(inputArray);
	    }
	    
	    System.out.println(input);
	    System.out.println(finalOutput);
		
		
		//System.out.println(sliceArrayByOneElement(inputArray));
	
		
		
	//	System.out.println(Character.getNumericValue(a));
		
		
		
	}
}
